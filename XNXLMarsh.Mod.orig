MODULE XNXLMarsh;
IMPORT  XNXLBase , XNXLEngrainer, XNXLVoxel, XNXLVoxel4, XNXLLifeVox, XNXLTexVox, Random, 
M3:=XNXLM3Space, N3:=XNXLN3, XNXLFRep, XNXLRotaVox, XNXLSierp, XNXLHalfSpace,
(*XNXLUDPClient, *)Files, Streams, Out:=KernelLog;

CONST sfile="marshstrokes.text"
TYPE Voxel=XNXLBase.Voxel;
	Cell=XNXLBase.Cell;
	PT=XNXLBase.PT;
	COLOR=XNXLBase.COLOR;  
	VA=ARRAY 5 OF Voxel;

TYPE mstroker=OBJECT
VAR f: Files.File; w: Files.Writer;
strokes: INTEGER;

PROCEDURE &init;
BEGIN
	f := Files.New(sfile);
	IF (f # NIL) THEN
		Files.OpenWriter(w, f, 0);
	END;
END init;

PROCEDURE tofile;
BEGIN
	IF (w.res = Streams.Ok) THEN
		w.Update;
		Files.Register(f)
	END
END tofile;

PROCEDURE stroke(p:PT; resolution: LONGINT; voxel:Voxel);
BEGIN
	IF (w.res = Streams.Ok)  THEN
		w.String("B.world.mstroke(");
		w.Int(ENTIER(p.x*1000000),6);
		w.Char(',');
		w.Int(ENTIER(p.y*1000000),6);
		w.Char(',');		
		w.Int(ENTIER(p.z*1000000),6);
		w.Char(',');	
		w.Int(resolution,4);
		w.Char(',');	
		w.String('"d41d8cd98f00b204e9800998ecf8427e"');
		w.String(");");
		w.Ln;
	END;
	INC(strokes);
	IF strokes>10 THEN
		strokes:=0;
		tofile;
	END	
END stroke;

END mstroker;

VAR
	Cursor: XNXLVoxel.BiVox;
	cursormark: XNXLTexVox.TexVox;
	cursorsave: Voxel;
	cursorTF*:BOOLEAN;
	ms: mstroker;
	sfish,gxy,w10,w11,v,EMPTY,lobster, btx,ash, dotz, GREEN,PURPLE,MCUBE:Voxel;
	rd,blu,gren,granite,sand,whiteblock,pdestroyer,axolotl,xen: Voxel;
	die0,die1,die2,die3,die4,die5,etile0,etile1,etile2,etile3,etile4,grass,sparx:Voxel;
	sky,dieone, serp,cthulhu,greenball,rat,conglomerate,conglo2: Voxel;
	i,j,k,ii,jj,kk,iii,jjj,kkk,t,s: LONGINT;
	cost: REAL;
	up,flat,down,right,away,slant,p,pp,q,qq,center,undercenter, normal,xaxis,yaxis,zaxis: PT;
	skybox,skysabot, b3, b33, b333: M3.cell;
	r,g,b: XNXLBase.COLOR;
	red,blue,green: REAL;
	EARTH: XNXLVoxel.DiffuseVox;
	rand: Random.Generator;
	z10: M3.cell3torus;
	x10: M3.cell;
	YELLOW: XNXLVoxel.DiffuseVox;
	BLACK,GREY, WHITE: XNXLVoxel.DiffuseVox;
	 GREENO: XNXLVoxel.COutlineVox;
	MIRROR: XNXLVoxel.DiffuseMVox;
	PINK, BROWN: XNXLVoxel.OutlineVox;
	NIGHT, TGREEN, TDGREEN, TYELLOW, TBROWN, TORANGE: M3.cell;
	TWHITE, TBLACK: XNXLVoxel.TransparaVox;
	RED, BLUE: XNXLVoxel.DiffuseVox;	
	RDYELLOW: XNXLVoxel.TransparaVox;	
	LW, LG: XNXLVoxel.TransparaVox;
	TBLUE,TRED, TPURPLE,TCOLOR: XNXLVoxel.TransparaVox;
	sphere, sphere2: XNXLVoxel. DiffuseSphVox;
	LIFE: XNXLLifeVox.RDVolVox;
	L: XNXLLifeVox.LifeVox;
	MPURPLE, MGREEN: XNXLVoxel.ColoredMVox;
	sky1, sky2, sky3, sky4, TEX, weev, meeba,mutatis,qdog,galaxy,jwater,
	penrose,slats,arrow,founder,rwal,gwal,bwal,
	beholdthexenopus, googlepocalypse,firetile,starfish,stone, linolium,formica, checkerfloor: XNXLTexVox.TexVox;
	escherfiretile, serptile, stile: VA;
	azure,crimson,yellow: XNXLBase.COLOR;
	cp: PT;
	av: LONGINT;
	title: XNXLBase.Name;
	frame: ARRAY 8 OF CHAR;	
	diameter:REAL;
	blacktick:INTEGER;
	fr: XNXLBase.FRF;
	ball, whiteball: XNXLFRep.sphere;
	plane:XNXLFRep.halfspace;
	cyl: XNXLFRep.cyl;
	lobsterplane,gorgeplane:XNXLFRep.landscape;
	lobstercone: XNXLFRep.texturedcone;
	hexgrid: XNXLFRep.hexgrid;
	yel: XNXLFRep.ellipsoid;
	tnoise: XNXLFRep.tilednoise;	
	noise: XNXLFRep.noise;
	cube: XNXLFRep.cube;
	checker,checker1,checker2: M3.cell;
	cosmos: XNXLBase.Cell;
	QHOLDER:M3.cell;	
	sperea,spereb: XNXLVoxel4.SphereInVox; 
	mspere:XNXLVoxel4.MirrorSphereInVox;
	Q,R,S,T,U,V:XNXLRotaVox.RVox;
	alfBoxWorld,boxsky: M3.cell;
	pa,pb: PT;
	hs: XNXLHalfSpace.halfvox;
	hsar: ARRAY 100 OF Voxel;
	vlistN, vN*: INTEGER;
	cursorsize*,previouscursorsize: LONGINT;
	n3ball:N3.cell;

PROCEDURE draw*;
VAR v: Voxel;
BEGIN
	v:=XNXLBase.vlist[vN];
	IF v#NIL THEN v:=v.deepcopy() END;
	XNXLBase.world.stroke(XNXLBase.cursorPT,cursorsize,v);	
(*	ms.stroke(XNXLBase.cursorPT,cursorsize,XNXLBase.vlist[vN]);
	XNXLUDPClient.stroke(XNXLBase.cursorPT,cursorsize,vN);	*)
END draw;

PROCEDURE drawcursor*;
BEGIN	
	IF cursorTF THEN
		XNXLBase.world.stroke(XNXLBase.previouscursorPT,previouscursorsize,cursorsave);	
		previouscursorsize:=cursorsize;	
		cursorsave:=XNXLBase.world.probe(XNXLBase.cursorPT,cursorsize);
		Cursor.v2:=cursorsave;
		XNXLBase.world.stroke(XNXLBase.cursorPT,cursorsize,Cursor);	
	END
END drawcursor;

PROCEDURE push*(v: Voxel);
BEGIN
	IF vlistN<98 THEN
		XNXLBase.vlist[vlistN]:=v;
		INC(vlistN);	
	END
END push;

PROCEDURE sniprobe*;
VAR
	v:Voxel;
BEGIN
	v:=XNXLBase.world.probe(XNXLBase.cursorPT,cursorsize);
	Cursor.v2:=v;
	Out.String("snipe!");
	Out.Ln;
END sniprobe;

PROCEDURE incVN*;
BEGIN
	vN:=vN+1;
	vN:= vN MOD vlistN;
	Cursor.v2:=XNXLBase.vlist[vN]
END incVN;

PROCEDURE decVN*;
BEGIN
	vN:=vN-1;
	vN:= vN MOD vlistN;
	Cursor.v2:=XNXLBase.vlist[vN]
END decVN;

PROCEDURE drawavatar*;
BEGIN
(*	XNXLUDPClient.stroke(XNXLBase.previouscursorPT,3000,0);	
	IF XNXLBase.world.passprobe(XNXLBase.cursorPT.x,XNXLBase.cursorPT.y,XNXLBase.cursorPT.z) THEN
		XNXLUDPClient.stroke(XNXLBase.cursorPT,3000,1)
	END *)
END drawavatar;

PROCEDURE engrain*;
BEGIN
	XNXLEngrainer.engrain(XNXLBase.world); 
END engrain;

PROCEDURE sprout*;
VAR v:Voxel;
BEGIN
	Out.String("sprouting...");
	v:=XNXLEngrainer.sprout(); 
	IF (v#NIL) & (v IS Cell) THEN
		WITH  v:Cell DO 
			XNXLBase.world:=v
		END
	ELSE
		NEW(x10);
		XNXLBase.world:=x10;
	END
END sprout;

PROCEDURE randPT*():PT;
VAR
	p:PT;
BEGIN
	p.x :=1/2+((1/2-rand.Uniform())*0.97);	
	p.y := 1/2+((1/2-rand.Uniform())*0.97);
	p.z := 1/2+((1/2-rand.Uniform())*0.97);	
	RETURN p
END randPT;

PROCEDURE dawn*;
BEGIN
	NEW(ms);
	NEW(cursormark,"Cursor.png");
	NEW(Cursor);
	NEW(EMPTY);
	Cursor.v1:=cursormark;
	cursormark.transparent:=FALSE;
      rand:=XNXLBase.rand;	
      dotz:=XNXLBase.VoxelFromName("Nahf6T7P6CYGfcImQTejDpg");	
	btx:=XNXLBase.VoxelFromName("NVY1hEGnyr7z8DtULRMOZIQ");	
	GREEN:=XNXLBase.VoxelFromName("NIqy3HQ4ZK8iRwAXelYYnsQ");	
	ash:=XNXLBase.VoxelFromName("NDQ0mOQYqpYYaLXJy4MS8BQ");	    
	PURPLE:=XNXLBase.VoxelFromName("NMdslbwjsXFOAzH64DQMliA");	
	MCUBE:=XNXLBase.VoxelFromName("Nr3kPtbyEYLFK3AN2UUVrqg");
	lobster:=XNXLBase.VoxelFromName("NznGx2ySiHIGrO5t9Pzcw5Q"); 

	die0:=XNXLBase.VoxelFromName("NUDjmgXk2BBrW9roFylvaLQ"); 	
	die1:=XNXLBase.VoxelFromName("No13s7eEq5z1VzXOucrDZiw"); 	
	die2:=XNXLBase.VoxelFromName("NxYQqSbWc7p4wTZbj9LvbUQ"); 	
	die3:=XNXLBase.VoxelFromName("NWdMWLJtPzMMIp2UEA2iYwQ"); 	
	die4:=XNXLBase.VoxelFromName("NNwW44Z6Y65O0pLKvYWsn3Q"); 	
	die5:=XNXLBase.VoxelFromName("N7OpxpUuffoMm09SEVF8k4Q"); 	

	gxy:=XNXLBase.VoxelFromName("NmOgKSH5ZXYP3DODELOkO7g"); 	
	sfish:=XNXLBase.VoxelFromName("NcufbYokzVEuEfN5MYiDlhA"); 	
	blu:=XNXLBase.VoxelFromName("NCjgzkmiTyecI5x6eOgYqpQ"); 		
	rd:=XNXLBase.VoxelFromName("NIXARXB2vH6ieKZmsc6mODg"); 	
	gren:=XNXLBase.VoxelFromName("NUeconrGpx7plz7ym76ibLw"); 		
	granite:=XNXLBase.VoxelFromName("NH6nvNlOJNlCtpkDB56ljSw"); 	
	sand:=XNXLBase.VoxelFromName("NnTJ6nDktAth4WTAUdr8HYQ"); 		
	whiteblock:=XNXLBase.VoxelFromName("NwPicBWw4NfcserX4ELaQ3A"); 	
	pdestroyer:=XNXLBase.VoxelFromName("N7Z9LarKWKBcwXrDkSXezPg"); 	
	axolotl:=XNXLBase.VoxelFromName("NnKyXYNiHwdxuM6wHrbxwuQ"); 	
	etile0:=XNXLBase.VoxelFromName("NMRR8eVl6DBZXeJLNZ0KC6g"); 	
	etile1:=XNXLBase.VoxelFromName("NhYOBdcESgNhNEXS2S3OXsw"); 	
	etile2:=XNXLBase.VoxelFromName("NiHWuC6tiaYe9Qxl3e1DNqw"); 	
	etile3:=XNXLBase.VoxelFromName("N6illtDKEH5g6dsUifexH1Q"); 	
	etile4:=XNXLBase.VoxelFromName("NxrglfWf3ZTXHHNB8BJ3sSQ"); 	
	grass:=XNXLBase.VoxelFromName("NJOFc7qhMXMly3lot71bNUw"); 	
	sparx:=XNXLBase.VoxelFromName("NSIsnYBTYL9BajD8fbPDSqg"); 
	xen:=XNXLBase.VoxelFromName("NZjDHYA8YHHcuymIh1fhHgg"); 		
	serp:=XNXLBase.VoxelFromName("NXWCxXWLIcD2LegvoGXXBiQ"); 	
	sky:=XNXLBase.VoxelFromName("NtxxZorqH5oWxECOCwH59AQ"); 	
	cthulhu:=XNXLBase.VoxelFromName("NuDxZaSfDCnI8xZnbp6c5ew"); 	
	greenball:=XNXLBase.VoxelFromName("NnviGAernhjFK40xASZZVoQ"); 	
	rat:=XNXLBase.VoxelFromName("NGJBlQ95mTkoMhozr6XOJYg"); 	
	conglomerate:=XNXLBase.VoxelFromName("N2qeD84Fv78X2XEj8PtUZOQ"); 	
	conglo2:=XNXLBase.VoxelFromName("NsOET4PW7wEUqBGE1Dr3rBQ"); 	
	push(sky);
	push(greenball);
	push(rat);
	push(serp);
	push(xen);
	push(rd);
	push(blu);
	push(gren);
	push(MCUBE);
	push(lobster);
	push(dieone);	
	push(GREEN);
	push(ash);      
	push(PURPLE);
	push(gxy);
	push(sfish);
	push(granite);
	push(sand);
	push(whiteblock);
	push(pdestroyer);
	push(axolotl);
	push(etile0);
	push(etile1);
	push(etile2);
	push(etile3);
	push(grass);
	push(sparx);	
	push(cthulhu);
	push(greenball);
	push(conglo2);
	
(*	xaxis:=XNXLBase.mkPT(1,0,0);
	yaxis:=XNXLBase.mkPT(0,1,0);	
	zaxis:=XNXLBase.mkPT(0,0,1);	
	NEW(sky);
	sky.setcolor(0,0,1);
	sky.passable:=FALSE;
	NEW(arrow,"next.png");
	push(arrow);
	NEW(meeba,"XNXL.meeba.png");	
	
	NEW(founder,"XNXL.ourfounder.png");	
	
	push(arrow); push(meeba); push(sparx); push(lobster); push(founder); push(dotz);
	NEW(mutatis,"XNXL.mutatis.png");
	NEW(weev,"XNXL.Freeweev.jpg");	
	NEW(qdog,"XNXL.qdog.png");	
	NEW(galaxy,"XNXL.axolotl.jpg");	
	NEW(gwal,"XNXL.meeba.png");
	NEW(sparx,"XNXL.sparx.png");		
	NEW(bwal,"XNXL.grass.png");	
	NEW(checkerfloor,"XNXL.checkerfloor.png");	
	NEW(stone,"XNXL.sand.png");	
	NEW(sky2,"XNXL.sky2.jpg");	
	NEW(sky3,"XNXL.sky3.jpg");	
	NEW(sky4,"XNXL.sky4.jpg");	
	NEW(TEX,"XNXL.tree.png");
	NEW(sky4,"yessongs.jpg");	
	NEW(formica,"XNXL.granite.png");
	NEW(linolium,"XNXL.linolium.png");
	NEW(rat,"rat.png");
	rat.passable:=FALSE;
	rat.transparent:=TRUE; 
	NEW(beholdthexenopus,"beholdthexenopus.png");
	push(beholdthexenopus);
	push(mutatis); push(qdog); push(weev); push(galaxy); push(EMPTY);
	push(bwal); push(stone); push(sky2); push(sky3); push(sky4); push(formica);
	NEW(starfish,"fruitstripe.png");		
	NEW(MCUBE);	
	push(MCUBE);

	NEW(slats,"XNXL.slats.png");	
	TEX.passable:=TRUE;
	NEW(MGREEN);
	MGREEN.setcolor(1/4,0,0,1/3); 
	
	NEW(BLUE); 
	BLUE.setcolor(3/6,4/6,1);
	NEW(RED); 
	RED.setcolor(1,0,0); 
	NEW(MIRROR);
	NEW(WHITE); 
	WHITE.setcolor(1,1,1);
	NEW(BLACK);
	BLACK.setcolor(0.1,0.1,0.1);
	

	NEW(LIFE,EMPTY,sparx,EMPTY)	;
	push(LIFE);
	
	WHITE.imposter:=BLUE;
	NEW(GREENO); NEW(PURPLE);
	push(GREENO);		
	GREENO.setcolor(0.8,1,0.8); 			
	GREENO.setoutline(0,0,0,1/50);
	GREENO.passable:=TRUE;

	
	NEW(YELLOW); NEW(BROWN);  
		
	YELLOW.setcolor(1,1,0); 
	BROWN.setcolor(2/3,2/3,1); 


	NEW(GREY);
	GREY.setcolor(5/6, 5/6, 5/6);
	NEW(PINK); PINK.setcolor(1,1,8/9);
	PINK.setoutline(1,2/3,2/3);
	NEW(TWHITE); 	TWHITE.setcolor(0.8,0.9,0.9,0);
	TWHITE.passable:=TRUE;
	XNXLBase.OPAQUE:=TWHITE;
	NEW(TBLUE); TBLUE.setcolor(0,0,1,3); 	
	NEW(TORANGE); TORANGE.setcolor(1,2/3,0,3);
	NEW(TDGREEN); TDGREEN.setcolor(0,0.6,0,1);
	NEW(TGREEN); TGREEN.setcolor(0,1,0,1);
	push(TGREEN);
	push(TDGREEN);	
	NEW(TRED); TRED.setcolor(0.9,0.00,0.1, 0.9); 
	NEW(TPURPLE); TPURPLE.setcolor(10,10,10,0);
	NEW(TYELLOW); TYELLOW.setcolor(1.7,1.7,0,0); 
	NEW(TBROWN); TBROWN.setcolor(2/3,2/3,0,10);
	NEW(TBLACK);
	TBLACK.setcolor(0,0,0,0.1);
	push(TWHITE); push(TGREEN); push(TYELLOW); push(TORANGE);
	TORANGE.passable:=FALSE;
	TBLUE.passable:=FALSE;
	NEW(NIGHT);
	NIGHT.setcolor(1/3,5,3,2);
	TRED.passable:=TRUE;
	XNXLBase.setCOLOR(g,1,1,0);
	XNXLBase.setCOLOR(r,1,1/3,0);
	XNXLBase.setCOLOR(azure,1/4,1/4,1);
	diameter:=1/3;

	XNXLBase.setPT(p,0.51,1/2,1/2);
	NEW(DAISY); NEW(D2);NEW(cube);
	
	XNXLBase.setPT(center,1/2,1/2,1/2);
	XNXLBase.setPT(undercenter,1/2,1/2,1/2);
	XNXLBase.setPT(up,0,0,1);	
	XNXLBase.setPT(down,0,0,-1);
	XNXLBase.setPT(right,1,0,0);
	XNXLBase.setPT(away,0,1,0);	
	NEW(s3,RED,BLUE);
	NEW(s33,s3,EMPTY);
	NEW(s333,s33,s333);
	s333.passable:=TRUE;
	s33.passable:=TRUE;
*)
(*	NEW(z10);
	z10.setcolor(3,0,0,1,1);
	NEW(tnoise);
	tnoise.va[0]:=die0;
	tnoise.va[1]:=MCUBE;
	tnoise.va[2]:=die2;
	tnoise.va[3]:=sand;
	tnoise.va[4]:=granite;
	tnoise.va[5]:=grass;
	tnoise.seed:=666;
	tnoise.octaves:=4;
	tnoise.persistence:=4;
	tnoise.a:=1;
	tnoise.b:=1;
	tnoise.c:=1;
	z10.FRasterSolid(tnoise,27);		
	push(z10);
*)
	NEW(LIFE,axolotl,NIL,dieone);
	LIFE.passable:=TRUE;
	push(LIFE);
	NEW(z10);
	XNXLBase.setPT(center,1/2,1/2,1/2);
	NEW(x10);
	x10.setcolor(1/6,1/6,1/6,0,0);

	XNXLBase.setPT(center,1/2,1/2,1/2);
	xaxis:=XNXLBase.mkPT(1,0,0);
	yaxis:=XNXLBase.mkPT(0,1,0);	
	zaxis:=XNXLBase.mkPT(0,0,1);	
	NEW(plane,center,zaxis);
	plane.setvoxel(gxy);	
	NEW(noise);
	noise.setvoxel(conglomerate);
	noise.seed:=85677;
	noise.octaves:=4;
	noise.persistence:=5;
	noise.a:=1;
	noise.b:=1;
	noise.c:=1;
	x10.FRasterSolid(plane,26); 
	NEW(tnoise);
	tnoise.va[0]:=sand;
	tnoise.va[1]:=die1;
	tnoise.va[2]:=die2;
	tnoise.va[3]:=GREEN;
	tnoise.va[4]:=rat;
	tnoise.va[5]:=die0;
	tnoise.seed:=88838;
	tnoise.octaves:=4;
	tnoise.persistence:=4;
	tnoise.a:=1;
	tnoise.b:=1;
	tnoise.c:=1;
	x10.FRasterSolid(tnoise,26);		
	z10.stroke(center,4,x10);
	XNXLBase.world:=x10; 	
	engrain;  
(*	sprout;	*)
	push(XNXLBase.world);
END dawn;

BEGIN
	cursorsize:=1000;
END XNXLMarsh.

XNXL.ourfounder.png


